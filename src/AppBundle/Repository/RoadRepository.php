<?php

namespace AppBundle\Repository;

use AppBundle\Repository\Options\SearchOption;
use Doctrine\ORM\QueryBuilder;

/**
 * RoadRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoadRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param array $optionsArray
     *
     * @return array|null
     */
    public function roads(array $optionsArray)
    {
        return $this->roadsQueryBulder($optionsArray)->getQuery()->getResult();
    }

    /**
     * @param array $optionsArray
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function roadsQueryBulder(array $optionsArray): QueryBuilder
    {
        $options = new SearchOption($optionsArray);
        $qb = $this->createQueryBuilder('r');

        if (null !== $options->getDate()) {
            $date = clone $options->getDate();
            $date = $date->format('Y-m-d');
            $qb->andWhere('r.dateObject = :date')->setParameter('date', $date);
        }

        if (!is_null($options->getCreatedAt())) {
            $qb->andWhere('r.createdAt = :createdAt')->setParameter('createdAt', $options->getCreatedAt());
        }

        if (is_array($options->getOrderBy())) {
            foreach ($options->getOrderBy() as $field => $direction) {
                $qb->addOrderBy($field, $direction);
            }
        } else {
            $qb->addOrderBy('r.name', 'asc');
        }

        if (null !== $options->getLimit()) {
            $qb->getMaxResults($options->getLimit());
        }

        $qb->andWhere($qb->expr()->eq('r.mine', ':mine'))->setParameter('mine', $options->getMine());

        return $qb;
    }
}
